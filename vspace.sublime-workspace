{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"cons",
				"console.log('$0');"
			],
			[
				"jso",
				"json_encode"
			],
			[
				"n",
				"newFolderName"
			],
			[
				"btn",
				"btnOK"
			],
			[
				"create",
				"createDir"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "$.extend(\n    $.fn, {\n        vsViewTree: function(o) {\n            if (o == null) o = {};\n            if (o.treeContainer == undefined) o.treeContainer = $('DIV#treeview-container');\n            if (o.eventHandlers == undefined) o.eventHandlers = null;\n\n            var self = this;\n            var data = [];\n            var selectedNode = null;\n\n            var init = function() {\n                //createRootNode();\n            };\n\n            var createNode = function(item, opts) {\n                if (opts == undefined) opts = {\n                    isRoot: false,\n                    hasChild: false,\n                    defaultStatus: 0, //0: collapsed; 1:expanded;\n                };\n\n                var nodeId = opts.isRoot ? rootDirId : item.id;\n                var nodeParentId = opts.isRoot ? rootDirId : item.parentID;\n                var nodeName = opts.isRoot ? rootDirName : item.name;\n                var nodeClass = opts.isRoot == true ? 'home' : (opts.hasChild == true ? 'directory-hc' : 'directory');\n                var defaulState = (opts.isRoot == false && opts.defaultStatus == 0) ? 'collapsed' : 'expanded';\n                var container = opts.isRoot == true ? o.treeContainer : $('UL.vstree[data-parentID=\"' + item.parentID + '\"]').find('> LI[data-id=\"' + item.parentID + '\"]');\n\n                var ul = $('<ul></ul>', {\n                    'class': 'vstree',\n                    'data-parentID': nodeId\n                });\n\n                var li = $('<li></li>', {\n                    'class': nodeClass,\n                    'data-type': 'folder',\n                    'data-id': nodeId,\n                    'data-name': nodeName\n                }).addClass(defaulState);\n\n                var a = $('<a></a>', {\n                    href: '#',\n                    'data-id': nodeId,\n                    text: nodeName\n                });\n\n                binEvents(a);\n\n                if (opts.isRoot == false && item.parentID != rootDirId) $(ul).hide();\n                $(li).append(a);\n                $(ul).append(li);\n                $(container).append(ul);\n            };\n\n            var binEvents = function(node) {\n                if (o.eventHandlers == null) return false;\n                $(node).bind('click', function(e) {\n                    if (e.button == 0) {\n                        o.eventHandlers.open(node, function(node) {\n                            self.nodeClick(node);\n                        });\n                    }\n                    return false;\n                });\n            };\n\n            var highlightNode = function(node) {\n                var itemId = $(node).attr('data-id');\n                $(o.treeContainer).find('.currentDir').removeClass('currentDir');\n                $(node).addClass('currentDir');\n                selectedNode = itemId;\n                return node;\n            }\n\n            var expandNode = function(node) {\n                var cls = 'expanded';\n                $(node).parent().children('UL:hidden').slideDown({\n                    duration: 100,\n                    easing: null\n                });\n                $(node).parent().removeClass('collapsed').addClass(cls);\n            };\n\n            var collapseNode = function(node) {\n                var cls = 'expanded';\n                $(node).parent().children('UL').slideUp({\n                    duration: 100,\n                    easing: null\n                });\n                $(node).parent().removeClass(cls).addClass('collapsed');\n            };\n	\n            var collapseOtherNode = function(node) {\n                //var parentId = $(node).parent().attr('');\n                //var otherNode = $(o.treeContainer).find('UL.vstree LI.expanded');\n                //$(o.treeContainer).find('UL.vstree LI.expanded').removeClass('expanded').addClass('collapsed');\n            };\n\n            this.nodeClick = function(node, forceOpen) {\n                if (forceOpen == undefined) forceOpen = false;\n                collapseOtherNode(node);\n                highlightNode($(node));\n                if ($(node).attr('data-id') != '-1') {		\n                    if ($(node).parent().hasClass('collapsed') || forceOpen == true) {\n                        expandNode(node);\n                    } else {\n                        collapseNode(node);\n                    }\n                }\n            };\n\n            this.renderTreeBranch = function(items, currentParentId) {\n                if (currentParentId == undefined) currentParentId = rootDirId;\n\n                var folders = items.folder;\n                if (folders.length > 0) {\n                    for (var i = 0; i < folders.length; i++) {\n                        if (folders[i].parentID != currentParentId || folders[i].id == currentParentId) continue;\n\n                        var oldNode = $(o.treeContainer).find('UL.vstree[data-parentID=\"' + folders[i].parentID + '\"] LI[data-id=\"' + folders[i].id + '\"]');\n                        if ($(oldNode).length > 0) {\n                            $(oldNode).parent().empty();\n                        }\n\n                        var opts = {\n                            isRoot: (folders[i].id == rootDirId),\n                            hasChild: 0,\n                            defaultStatus: 0\n                        };\n                        createNode(folders[i], opts);\n                    };\n                }\n            };\n\n            this.createRootNode = function() {\n                var opts = {\n                    isRoot: true,\n                    hasChild: 0,\n                    defaultStatus: 1\n                };\n\n                var item = {\n                    id: rootDirId,\n                    name: rootDirName,\n                    parentID: 0,\n                    mdate: null\n                };\n                createNode(item, opts);\n            };\n\n            this.findNodeById = function(id) {\n                return $(o.treeContainer).find('A[data-id=\"' + id + '\"]')\n            };\n\n            this.getSelectedNode = function() {\n                return selectedNode == null ? -1 : selectedNode;\n            };\n\n            this.setOptions = function(opt, value) {\n                eval('o.' + opt + '= value;');\n            };\n\n            this.getOptions = function(opt) {\n                if (opt == null) return o;\n                else return eval('o.' + opt);\n            };\n\n            this.addData = function(data) {\n\n            };\n\n            this.deleteData = function(data) {\n\n            };\n\n            this.initialize = function() {\n                init();\n                return this;\n            };\n\n            return this.initialize();\n        }\n    });",
			"file": "assets/js/space/mvc/tree.js",
			"file_size": 4964,
			"file_write_time": 130966289390000000,
			"settings":
			{
				"buffer_size": 6659,
				"line_ending": "Windows"
			}
		},
		{
			"file": "assets/js/space/mvc/grid.js",
			"settings":
			{
				"buffer_size": 3975,
				"line_ending": "Windows"
			}
		},
		{
			"file": "assets/js/space/mvc/controller.js",
			"settings":
			{
				"buffer_size": 2755,
				"line_ending": "Windows"
			}
		},
		{
			"file": "assets/js/space/mvc/manager.js",
			"settings":
			{
				"buffer_size": 1525,
				"line_ending": "Windows"
			}
		},
		{
			"file": "assets/js/space/mvc/layout.js",
			"settings":
			{
				"buffer_size": 4439,
				"line_ending": "Windows"
			}
		},
		{
			"file": "api.log",
			"settings":
			{
				"buffer_size": 6014,
				"line_ending": "Unix"
			}
		},
		{
			"file": "assets/js/space/mvc/model.js",
			"settings":
			{
				"buffer_size": 3604,
				"line_ending": "Windows"
			}
		},
		{
			"file": "assets/js/space/mvc/connection.js",
			"settings":
			{
				"buffer_size": 3005,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/controllers/Privatecontent.php",
			"settings":
			{
				"buffer_size": 10971,
				"line_ending": "Windows"
			}
		},
		{
			"file": "assets/js/space/mvc/user.js",
			"settings":
			{
				"buffer_size": 3822,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"Package Control: Install Package"
			],
			[
				"For",
				"Format: Javascript"
			],
			[
				"p",
				"Package Control: Install Package"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Volumes/SSD/www",
		"/Volumes/SSD/www/application",
		"/Volumes/SSD/www/application/views",
		"/Volumes/SSD/www/application/views/19"
	],
	"file_history":
	[
		"/Volumes/SSD/www/application/config/routes.php",
		"/Volumes/SSD/www/api.log",
		"/Volumes/SSD/www/application/views/main_19.php",
		"/Volumes/SSD/www/application/views/19/loginform.php",
		"/Volumes/SSD/www/application/controllers/Privatecontent.php",
		"/Volumes/SSD/www/.htaccess",
		"/Volumes/SSD/www/index.php",
		"/Users/dzungnv02/Desktop/database.php",
		"/Volumes/Data/mysql-init.txt",
		"/usr/local/mysql-5.7.10-osx10.9-x86_64/support-files/my-default.cnf"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"newFolderName",
			"validateLogin",
			";\n",
			"currDir",
			"objController",
			"//$(",
			"loginDlg",
			"';",
			"};\n",
			"api.php"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 6,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "assets/js/space/mvc/tree.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6659,
						"regions":
						{
						},
						"selection":
						[
							[
								3080,
								3080
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "assets/js/space/mvc/grid.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3975,
						"regions":
						{
						},
						"selection":
						[
							[
								3530,
								3530
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1455.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "assets/js/space/mvc/controller.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2755,
						"regions":
						{
						},
						"selection":
						[
							[
								983,
								983
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 438.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "assets/js/space/mvc/manager.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1525,
						"regions":
						{
						},
						"selection":
						[
							[
								645,
								645
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "assets/js/space/mvc/layout.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4439,
						"regions":
						{
						},
						"selection":
						[
							[
								734,
								734
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 149.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "api.log",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6014,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "assets/js/space/mvc/model.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3604,
						"regions":
						{
						},
						"selection":
						[
							[
								3410,
								3410
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1746.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "assets/js/space/mvc/connection.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3005,
						"regions":
						{
						},
						"selection":
						[
							[
								261,
								261
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "application/controllers/Privatecontent.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10971,
						"regions":
						{
						},
						"selection":
						[
							[
								1906,
								1906
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 615.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "assets/js/space/mvc/user.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3822,
						"regions":
						{
						},
						"selection":
						[
							[
								1215,
								1215
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "vspace.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 261.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
