{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"resu",
				"result	FileReader"
			],
			[
				"aryU",
				"aryUserData"
			],
			[
				"se",
				"self"
			],
			[
				"cons",
				"console.log('$0');"
			],
			[
				"jso",
				"json_encode"
			],
			[
				"n",
				"newFolderName"
			],
			[
				"btn",
				"btnOK"
			],
			[
				"create",
				"createDir"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "$.extend(\n    $.fn, {\n        vsViewTree: function(o) {\n            if (o == null) o = {};\n            if (o.treeContainer == undefined) o.treeContainer = $('DIV#treeview-container');\n            if (o.eventHandlers == undefined) o.eventHandlers = null;\n\n            var self = this;\n            var data = [];\n            var selectedNode = null;\n\n            var init = function() {\n                //createRootNode();\n            };\n\n            var createNode = function(item, opts) {\n                if (opts == undefined) opts = {\n                    isRoot: false,\n                    hasChild: false,\n                    defaultStatus: 0, //0: collapsed; 1:expanded;\n                };\n\n                var nodeId = opts.isRoot ? rootDirId : item.id;\n                var nodeParentId = opts.isRoot ? rootDirId : item.parentID;\n                var nodeName = opts.isRoot ? rootDirName : item.name;\n                var nodeClass = opts.isRoot == true ? 'home' : (opts.hasChild == true ? 'directory-hc' : 'directory');\n                var defaulState = (opts.isRoot == false && opts.defaultStatus == 0) ? 'collapsed' : 'expanded';\n                var container = opts.isRoot == true ? o.treeContainer : $('UL.vstree').find('> LI[data-id=\"' + item.parentID + '\"]');\n\n                var ul = $('<ul></ul>', {\n                    'class': 'vstree',\n                    'data-parentID': nodeParentId\n                });\n\n                var li = $('<li></li>', {\n                    'class': nodeClass,\n                    'data-type': 'directory',\n                    'data-id': nodeId,\n                    'data-name': nodeName,\n                    'data-parent': item.parentID,\n                    'data-child': item.subdirs\n                }).addClass(defaulState);\n\n                var a = $('<a></a>', {\n                    href: '#',\n                    'data-id': nodeId,\n                    text: nodeName\n                });\n\n                binEvents(a);\n\n                if (opts.isRoot == false && item.parentID != rootDirId) $(ul).hide();\n                $(li).append(a);\n                $(ul).append(li);\n                $(container).append(ul);\n            };\n\n            var binEvents = function(node) {\n                if (o.eventHandlers == null) return false;\n                $(node).bind('click', function(e) {\n                    if (e.button == 0) {\n                        o.eventHandlers.open(node, function(node) {\n                            self.nodeClick(node);\n                        });\n                    }\n                    return false;\n                });\n            };\n\n            var highlightNode = function(node) {\n                var itemId = $(node).attr('data-id');\n                $(o.treeContainer).find('.currentDir').removeClass('currentDir');\n                $(node).addClass('currentDir');\n                return node;\n            }\n\n            var expandNode = function(node) {\n                var cls = 'expanded';\n                $(node).parent().children('UL:hidden').slideDown({\n                    duration: 100,\n                    easing: null\n                });\n                $(node).parent().removeClass('collapsed').addClass(cls);\n            };\n\n            var collapseNode = function(node) {\n                var cls = 'expanded';\n                $(node).parent().children('UL').slideUp({\n                    duration: 100,\n                    easing: null\n                });\n                $(node).parent().removeClass(cls).addClass('collapsed');\n            };\n\n            var collapseOtherNode = function(node) {\n                //var parentId = $(node).parent().attr('');\n                //var otherNode = $(o.treeContainer).find('UL.vstree LI.expanded');\n                //$(o.treeContainer).find('UL.vstree LI.expanded').removeClass('expanded').addClass('collapsed');\n            };\n\n            this.nodeClick = function(node, forceOpen) {\n                if (forceOpen == undefined) forceOpen = false;\n                collapseOtherNode(node);\n                highlightNode($(node));\n                if ($(node).attr('data-id') != '-1') {\n                    if ($(node).parent().hasClass('collapsed') || forceOpen == true) {\n                        expandNode(node);\n                    } else {\n                        collapseNode(node);\n                    }\n                }\n            };\n\n            this.renderTreeBranch = function(items, currentParentId) {\n                console.log(folders);\n                if (currentParentId == undefined) currentParentId = rootDirId;\n                var folders = items.folder;\n                var currNode = self.findNodeById(currentParentId);\n                $(currNode).parent().find('UL.vstree').remove();\n\n                if (folders.length > 0) {   \n                    for (var i = 0; i < folders.length; i++) {\n                        if (folders[i].parentID != currentParentId || folders[i].id == currentParentId) continue;\n                        var opts = {\n                            isRoot: (folders[i].id == rootDirId),\n                            hasChild: 0,\n                            defaultStatus: 0\n                        };\n                        createNode(folders[i], opts);\n                    };\n                }\n            };\n\n            this.createRootNode = function() {\n                var opts = {\n                    isRoot: true,\n                    hasChild: 0,\n                    defaultStatus: 1\n                };\n\n                var item = {\n                    id: rootDirId,\n                    name: rootDirName,\n                    parentID: 0,\n                    mdate: null\n                };\n                createNode(item, opts);\n            };\n\n            this.findNodeById = function(id) {\n                return $(o.treeContainer).find('A[data-id=\"' + id + '\"]')\n            };\n\n            this.getSelectedNode = function() {\n                var node = $(o.treeContainer).find('.currentDir');\n                if ($(node).length == 0) node = $(o.treeContainer).find('A[data-id=\"-1\"]');\n                return $(node).attr('data-id');\n            };\n\n            this.findTreeBrand = function(node) {\n                var aryTreeBrand = [];\n                var newIdx = aryTreeBrand.length == 0 ? 0 : aryTreeBrand.length;\n                var id = $(node).attr('data-id');\n                var parentId = $(node).parent().attr('data-parent');                              \n                var parentNode = self.findNodeById(parentId);\n                aryTreeBrand[newIdx] = node;\n                if (id != rootDirId)   \n                    aryTreeBrand[newIdx + 1] = parentNode; \n                else return aryTreeBrand;\n                   \n                while($(parentNode).attr('data-id') != rootDirId){\n                    newIdx = aryTreeBrand.length == 0 ? 0 : aryTreeBrand.length;\n                    parentId = $(parentNode).parent().attr('data-parent');\n                    parentNode = self.findNodeById(parentId);\n                    aryTreeBrand[newIdx] = parentNode;\n                }\n                return aryTreeBrand;\n            };\n\n            this.setOptions = function(opt, value) {\n                eval('o.' + opt + '= value;');\n            };\n\n            this.getOptions = function(opt) {\n                if (opt == null) return o;\n                else return eval('o.' + opt);\n            };\n\n            this.addData = function(data) {\n\n            };\n\n            this.deleteData = function(data) {\n\n            };\n\n            this.initialize = function() {\n                init();\n                return this;\n            };\n\n            return this.initialize();\n        }\n    });",
			"file": "assets/js/space/mvc/tree.js",
			"file_size": 7904,
			"file_write_time": 130970497420000000,
			"settings":
			{
				"buffer_size": 7704,
				"line_ending": "Windows"
			}
		},
		{
			"file": "assets/js/space/mvc/grid.js",
			"settings":
			{
				"buffer_size": 4182,
				"line_ending": "Windows"
			}
		},
		{
			"file": "assets/js/space/mvc/controller.js",
			"settings":
			{
				"buffer_size": 2917,
				"line_ending": "Windows"
			}
		},
		{
			"file": "assets/js/space/mvc/manager.js",
			"settings":
			{
				"buffer_size": 1553,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "$.extend(\n	$.fn, {\n		vsViewLayout: function(o) {\n			if (o == null) o = {};\n			if (o.maincontainer == undefined)\n				o.maincontainer = null;\n			if (o.titlebar == undefined)\n				o.titlebar = $('DIV#navbar');\n			if (o.toolsbar == undefined)\n				o.toolsbar = $('DIV#tools-bar');\n			if (o.statusbar == undefined)\n				o.statusbar = $('DIV#status-bar');\n			if (o.navigationbar == undefined)\n				o.navigationbar = $('DIV#navigation-bar');\n			if (o.tree == undefined)\n				o.tree = $('DIV#treeview-container');\n			if (o.grid == undefined)\n				o.grid = $('DIV#file-container');\n\n			var aryButtons = $(o.toolsbar).find('BUTTON');\n\n			var aryBreadcrumb = [];\n\n			var maxWidth = 0;\n\n			var self = this;\n\n			var init = function() {\n				layoutRender();\n				$(aryButtons).each(function(index) {\n					var button = this;\n					var func = $(button).attr('data-act');\n					$(button).bind('click', function(e) {\n						eval('objController.' + func + '();');\n					});\n				});\n\n				$(o.tree).parent().resizable({\n					maxWidth: maxWidth,\n					minWidth: 220,\n					handles: \"e\",\n					resize: function(event, ui) {\n						layoutRender();\n					}\n				});\n\n				$(window).resize(function() {\n					layoutRender();\n					$(o.tree).parent().resizable({\n						maxWidth: maxWidth\n					});\n				});\n			};\n\n			var getDirTreeMaxWidth = function() {\n				var scrWidth = $(document).width();\n				return parseInt(scrWidth / 3);\n			};\n\n			var layoutRender = function() {\n				var scrHeght = $(window).innerHeight();\n				var dirTreeHeight = scrHeght - $(o.titlebar).height() - $(o.toolsbar).height() - $(o.statusbar).height() - 5;\n				var tree = $(o.tree);\n				var grid = $(o.grid);\n				tree.parent().height(dirTreeHeight);\n				grid.parent().height(dirTreeHeight);\n				grid.parent().width('calc(100% - ' + (tree.parent().width() + 8) + 'px)');\n				maxWidth = getDirTreeMaxWidth();\n				$(o.tree).height(dirTreeHeight - 5);\n			};\n\n			var renderRenameInput = function(container) {\n\n			};\n\n			var validateCreateFolder = function(foldername, customErr) {\n				if (customErr == undefined) customErr = null;\n				var errMsg = '';\n				var objErr = $('FORM#createFolderForm DIV.help-block[for=\"foldername\"]');\n				$(objErr).text('').hide();\n				$(objErr).parent().parent().removeClass('has-error');\n\n				if (customErr == null) {\n					if (foldername == '') {\n						errMsg = 'Bạn hãy nhập tên thư mục!';\n					}\n				} else {\n					errMsg = customErr.err;\n				}\n\n				if (errMsg != '') {\n					$(objErr).text(errMsg).show();\n					$(objErr).parent().parent().addClass('has-error');\n					$(objErr).parent().find('INPUT').focus();\n					return false;\n				} else return true;\n			};\n\n			this.showCreateFolderDlg = function(callback) {\n				var formHTML = '<form id=\"createFolderForm\" action=\"#\" name=\"createFolderForm\" method=\"POST\" class=\"form-horizontal\">';\n				formHTML += '    <div class=\"form-group\">';\n				formHTML += '		<div class=\"col-xs-9\">';\n				formHTML += '			<input type=\"text\" class=\"form-control\" name=\"foldername\" placeholder=\"Nhập tên thư  mục\" />';\n				formHTML += '			<div class=\"help-block\" style=\"display:none\" for=\"foldername\"></div>';\n				formHTML += '		</div>';\n				formHTML += '		<div class=\"col-xs-3\">';\n				formHTML += '			<button id=\"btnOK\" type=\"button\" class=\"btn btn-success btn-sm\">OK</button>';\n				formHTML += '		</div>';\n				formHTML += '	</div>';\n				formHTML += '</form>';\n\n				var dlg = bootbox.dialog({\n						title: 'Tạo thư mục',\n						message: formHTML,\n						show: false\n					})\n					.on('shown.bs.modal', function() {\n						$(this).find('FORM#createFolderForm').find('INPUT').focus();\n					})\n					.on('hide.bs.modal', function(e) {})\n					.modal('show');\n\n				$(dlg).find('DIV.modal-dialog').css('width', '350px');\n				var btnOK = $(dlg).find('DIV.modal-dialog FORM#createFolderForm BUTTON#btnOK');\n				var form = $(dlg).find('DIV.modal-dialog FORM#createFolderForm');\n\n				$(btnOK).unbind('click').bind('click', function(e) {\n					$(form).submit();\n				});\n\n				$(form).on('submit', function(e) {\n					var newFolderName = $(dlg).find('FORM#createFolderForm INPUT[name=\"foldername\"]').val().trim();\n					var destination = objTree.getSelectedNode();\n					objSpaceModel.createFolder(newFolderName, destination, dlg, validateCreateFolder);\n					e.preventDefault();\n					return false;\n				});\n			};\n\n			this.showDeleteConfirm = function(aryId) {\n				var message = 'Bạn có chắc chắn muốn xóa [cusmsg] không?';\n				var rpStr = '';\n				if (aryId.length == 1) {\n					var node = objGrid.findNodeById(aryId[0]).attr('data-id') == undefined ? $(objTree.findNodeById(aryId[0])).parent() : objGrid.findNodeById(aryId[0]);\n					var type = $(node).attr('data-type') == 'directory' ? 'thư mục' : 'file';\n					rpStr = type + ' <strong style=\"color:red\">' + $(node).attr('data-name') + '</strong>';\n				} else {\n					rpStr = '<strong>' + aryId.length + '</strong>' + ' file/thư mục đã chọn'\n				}\n\n				bootbox.confirm(message.replace('[cusmsg]', rpStr), function(result) {\n					if (result == true) objSpaceModel.delete(aryId, function() {\n						var node = objGrid.findNodeById(aryId[0]).attr('data-id') == undefined ? $(objTree.findNodeById(aryId[0])).parent() : objGrid.findNodeById(aryId[0]);\n						objController.refresh($(node).attr('data-parent'));\n					});\n				});\n			};\n\n			this.setBreadcrumb = function() {\n				var currId = objTree.getSelectedNode();\n				var node = objTree.findNodeById(currId);\n				var aryTreeBrand = objTree.findTreeBrand(node);\n				var container = $(o.navigationbar).find('UL.breadcrumb');\n				$(container).empty();\n\n				for (var i = aryTreeBrand.length - 1; i >= 0; i--) {\n					var item = null;\n					if (i == aryTreeBrand.length - 1) {\n						item = $('<li></li>').append($('<i></i>', {\n							'class': 'ace-icon fa fa-folder home-icon'\n						}), $('<a></a>', {\n							href: '',\n							text: $(aryTreeBrand[i]).text()\n						}));\n					} else {\n						item = $('<li></li>').append($('<a></a>', {\n							href: '',\n							text: $(aryTreeBrand[i]).text()\n						}));\n					}\n\n					var data = jQuery.hasData($(aryTreeBrand[i])[0]) && jQuery._data($(aryTreeBrand[i])[0]);\n					$(item).find('A').bind('click', data.events.click[0].handler);\n\n					$(container).append(item);\n				}\n			};\n\n			this.setOptions = function(opt, value) {\n				eval('o.' + opt + '= value;');\n			};\n\n			this.getOptions = function(opt) {\n				if (opt == null) return o;\n				else return eval('o.' + opt);\n			};\n\n			this.initialize = function() {\n				init();\n				return this;\n			};\n\n			return this.initialize();\n		}\n	});",
			"file": "assets/js/space/mvc/layout.js",
			"file_size": 6659,
			"file_write_time": 130969223800000000,
			"settings":
			{
				"buffer_size": 6455,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/views/main.php",
			"settings":
			{
				"buffer_size": 6332,
				"line_ending": "Windows"
			}
		},
		{
			"file": "assets/js/space/mvc/model.js",
			"settings":
			{
				"buffer_size": 4319,
				"line_ending": "Windows"
			}
		},
		{
			"file": "assets/js/space/mvc/connection.js",
			"settings":
			{
				"buffer_size": 3005,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/controllers/Privatecontent.php",
			"settings":
			{
				"buffer_size": 10942,
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/config/config.php",
			"settings":
			{
				"buffer_size": 18000,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<?php\n\n\nClass Vservices {\n	\n	private $_apiUrl;\n	private $_curlObj;\n	private $_userId;\n	private $_password;\n	\n	private $_httpUser;\n	private $_httpPasswd;\n	\n	public function __construct() {\n	}\n	public function setApiUrl($url) {\n		$this->_apiUrl = $url;\n	}\n	\n	public function setConnection($curl) {\n		$this->_curlObj = $curl;\n	}\n	\n	public function setUserId ($userId) {\n		$this->_userId = $userId;\n	}\n	\n	public function setPassword ($password) {\n		$this->_password = $password;\n	}\n	\n	public function getPrivateTree () {\n		$this->_curlObj->create($this->_apiUrl. 'space/dir/isgetall/1');\n		$this->_curlObj->option(CURLOPT_BUFFERSIZE, 10);\n		$this->_curlObj->options(array(CURLOPT_BUFFERSIZE => 10));\n                $post =  $this->_userId ? array('userid' => $this->_userId) : array();\n		$this->_curlObj->post($post);\n		return $this->_curlObj->execute();\n	}\n    \n    public function getPreview ($fileId) {\n		$this->_curlObj->create($this->_apiUrl. 'space/preview/');\n		$this->_curlObj->option(CURLOPT_BUFFERSIZE, 10);\n		$this->_curlObj->options(array(CURLOPT_BUFFERSIZE => 10));\n                $post =  $this->_userId ? array('fileId' => $fileId,'userId' => $this->_userId) : array();\n		$this->_curlObj->post($post);\n		return $this->_curlObj->execute();\n	}\n	\n	/**\n	 * $aryParams\n	 * \n	 * @param unknown $action\n	 * @param unknown $aryParams\n	 */\n	public function actionExecute ($action, $aryParams = array(), $module = 'space') {\n		$url = $this->_apiUrl. $module .'/'.$action;\n		\n		$this->_curlObj->create($url);\n		$this->_curlObj->option(CURLOPT_BUFFERSIZE, 10);\n		$this->_curlObj->option(CURLOPT_HEADER, 0);\n		$this->_curlObj->option(CURLOPT_FAILONERROR, FALSE);\n		\n		if ($this->_httpUser && $this->_httpPasswd) {\n			$this->_curlObj->http_login($this->_httpUser, $this->_httpPasswd);\n		}\n		\n		if ($this->_userId) $aryParams['userid'] = $this->_userId;\n		if (count($aryParams) > 0) $this->_curlObj->post($aryParams);\n		\n		$result = $this->_curlObj->execute();\n\n		$serverIP = gethostbyname ('api.violet.vn');\n		$logMsg = date('Y-m-d H:i:s') .' - File: '. __FILE__ . ' - line:'. __LINE__ .' - API Result: '. var_export($result, true). ' - Action: '. var_export($url, true) .' - PARAMS: '. var_export($aryParams, true).' - SERVER IP: '.$serverIP.\"\\n\";\n		error_log($logMsg, 3, dirname(dirname(dirname(__FILE__))).'/api.log');\n		\n		return $result;\n	}\n	\n	public function __destruct() {\n		\n	}\n}",
			"file": "application/libraries/Vservices.php",
			"file_size": 2470,
			"file_write_time": 130964395920000000,
			"settings":
			{
				"buffer_size": 2386,
				"line_ending": "Windows"
			}
		},
		{
			"file": "api.log",
			"settings":
			{
				"buffer_size": 72747,
				"line_ending": "Unix"
			}
		},
		{
			"file": "assets/js/space/mvc/user.js",
			"settings":
			{
				"buffer_size": 3822,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"Package Control: Install Package"
			],
			[
				"For",
				"Format: Javascript"
			],
			[
				"p",
				"Package Control: Install Package"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Volumes/SSD/www",
		"/Volumes/SSD/www/application",
		"/Volumes/SSD/www/application/config",
		"/Volumes/SSD/www/application/libraries",
		"/Volumes/SSD/www/assets",
		"/Volumes/SSD/www/assets/js",
		"/Volumes/SSD/www/assets/js/space",
		"/Volumes/SSD/www/assets/js/space/mvc"
	],
	"file_history":
	[
		"/Volumes/SSD/www/api.log",
		"/Volumes/SSD/www/readme.rst",
		"/Volumes/SSD/www/application/config/routes.php",
		"/Volumes/SSD/www/application/views/main_19.php",
		"/Volumes/SSD/www/application/views/19/loginform.php",
		"/Volumes/SSD/www/application/controllers/Privatecontent.php",
		"/Volumes/SSD/www/.htaccess",
		"/Volumes/SSD/www/index.php",
		"/Users/dzungnv02/Desktop/database.php",
		"/Volumes/Data/mysql-init.txt",
		"/usr/local/mysql-5.7.10-osx10.9-x86_64/support-files/my-default.cnf"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"							\n",
			"self::_sid",
			"_sid",
			"sid",
			"rootNode",
			");\n",
			"				\n",
			"					\n",
			"console.log",
			"renderTreeBranch",
			"				\n",
			"selectedNode",
			"{\n",
			";\n",
			"                $(",
			"getSelectedNode",
			"rpStr",
			"newFolderName",
			"validateLogin",
			";\n",
			"currDir",
			"objController",
			"//$(",
			"loginDlg",
			"';",
			"};\n",
			"api.php"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"$this->_sid"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 9,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "assets/js/space/mvc/tree.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7704,
						"regions":
						{
						},
						"selection":
						[
							[
								4380,
								4380
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 1204.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "assets/js/space/mvc/grid.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4182,
						"regions":
						{
						},
						"selection":
						[
							[
								1159,
								1159
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "assets/js/space/mvc/controller.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2917,
						"regions":
						{
						},
						"selection":
						[
							[
								991,
								991
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "assets/js/space/mvc/manager.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1553,
						"regions":
						{
						},
						"selection":
						[
							[
								490,
								490
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "assets/js/space/mvc/layout.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6455,
						"regions":
						{
						},
						"selection":
						[
							[
								1421,
								1421
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "application/views/main.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6332,
						"regions":
						{
						},
						"selection":
						[
							[
								5382,
								5382
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "assets/js/space/mvc/model.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4319,
						"regions":
						{
						},
						"selection":
						[
							[
								2047,
								2047
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "assets/js/space/mvc/connection.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3005,
						"regions":
						{
						},
						"selection":
						[
							[
								415,
								415
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 701.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "application/controllers/Privatecontent.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10942,
						"regions":
						{
						},
						"selection":
						[
							[
								3439,
								3439
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1057.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "application/config/config.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18000,
						"regions":
						{
						},
						"selection":
						[
							[
								17694,
								17694
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 6759.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "application/libraries/Vservices.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2386,
						"regions":
						{
						},
						"selection":
						[
							[
								1507,
								1507
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 423.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "api.log",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 72747,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "assets/js/space/mvc/user.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3822,
						"regions":
						{
						},
						"selection":
						[
							[
								1816,
								1816
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 577.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "vspace.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 273.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
